---
title: "Seminar on DNA Data Storage"
subtitle: "Improved read/write cost tradeoff in DNA-based data storage using LDPC codes<br><br>Shubham Chandak, Kedar Tatwawadi, Billy Lau, Jay Mardia, Matthew Kubit, Joachim Neu, Peter Griffin, Mary Wootters, Tsachy Weissman, Hanlee J<br>(2019)<br><br>Presented by: Atar Ron and Mattan Hoory"
format:
  revealjs: 
    title-slide-attributes:
      data-state: "hide-menubar"
    slide-number: true
    preview-links: auto
    css: style.css
    logo: assets/CS_LOGO.jpg
    footer: 'DNA Data Storage - 02360801 - Spring 2025'
    toc: true
    simplemenu:
        flat: true
        barhtml:
            header: "<div class='menubar'><ul class='menu'></ul><div>"
        scale: 0.67

revealjs-plugins:
  - simplemenu
---
## {data-name="Intro"}
![](assets/publication.png)
<br>of the most important problems in DNA data storage is the cost of writing and reading DNA.

## Goals and motivation

## Separation Strategy VS Single Large block code {data-name="Strategies"}

## Theoretical bounds {data-name="Theoretical bounds"}

## LDPC {data-name="LDPC"}
LDPC codes are a class of linear block error correction codes. Originally invented by Gallager in the 1960s, yet has become into wide use only in recent decades. They are used in cellular communications, Wi-Fi, video broadcasts, and more today.

::: {.incremental}
- Tanner graphs and parity check matrices $H$
- BSC (The Binary Symmetric Channel) vs BEC (Binary Erasure Channel)
- Decoding Algorithm
  - Gallagerâ€™s bit-flipping algorithm (BSC)
  - Belief propagation algorithm
:::

## Extensions
::: {.incremental}
- BCH+Raptor codes VS LDPC
- Simulations (code)
- Synchronzation marker
- Addressing index+BCH
- MSA
:::


## Experimental results {data-name="Experimental results"}
::: {.incremental}
- Insertions and deletions based on heuristics
- Simulations based on [github](https://github.com/shubhamchandak94/LDPC_DNA_storage) code
:::

## Crafting the Presentation: Tools {data-name="Conclusion"}
- [`Quarto`](https://quarto.org/): markdown-based authoring system that supports multiple output formats.
- [`revealjs`](https://revealjs.com/): a framework for creating interactive presentations using HTML and JavaScript.
  - [`simplemenu`](https://github.com/Martinomagnifico/quarto-simplemenu): a plugin to create a menu bar that allows us to navigate through the presentation.

## Ideas

- Gallager youtube talk at the end of the slides
- Example of LDPC using [pyldpc](https://hichamjanati.github.io/pyldpc/auto_examples/plot_coding_decoding_simulation.html#sphx-glr-auto-examples-plot-coding-decoding-simulation-py)


## Questions for Eitan
1. Is bit-flipping enough? (Should we go into decoding LDPC with Message Passing?)